<?php
/**
 * AccountSettingsZoomRoomsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Zoom\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom API
 *
 * The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applicatixons on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developersupport@zoom.us
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Zoom\Api;

use PHPUnit\Framework\TestCase;

/**
 * AccountSettingsZoomRoomsTest Class Doc Comment
 *
 * @category    Class
 * @description Account Settings: Zoom Rooms.
 * @package     Zoom\Api
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class AccountSettingsZoomRoomsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "AccountSettingsZoomRooms"
     */
    public function testAccountSettingsZoomRooms()
    {
    }

    /**
     * Test attribute "upcoming_meeting_alert"
     */
    public function testPropertyUpcomingMeetingAlert()
    {
    }

    /**
     * Test attribute "start_airplay_manually"
     */
    public function testPropertyStartAirplayManually()
    {
    }

    /**
     * Test attribute "weekly_system_restart"
     */
    public function testPropertyWeeklySystemRestart()
    {
    }

    /**
     * Test attribute "list_meetings_with_calendar"
     */
    public function testPropertyListMeetingsWithCalendar()
    {
    }

    /**
     * Test attribute "zr_post_meeting_feedback"
     */
    public function testPropertyZrPostMeetingFeedback()
    {
    }

    /**
     * Test attribute "ultrasonic"
     */
    public function testPropertyUltrasonic()
    {
    }

    /**
     * Test attribute "force_private_meeting"
     */
    public function testPropertyForcePrivateMeeting()
    {
    }

    /**
     * Test attribute "hide_host_information"
     */
    public function testPropertyHideHostInformation()
    {
    }

    /**
     * Test attribute "cmr_for_instant_meeting"
     */
    public function testPropertyCmrForInstantMeeting()
    {
    }

    /**
     * Test attribute "auto_start_stop_scheduled_meetings"
     */
    public function testPropertyAutoStartStopScheduledMeetings()
    {
    }
}
