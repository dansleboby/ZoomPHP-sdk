<?php
/**
 * UpdateZoomRoomAccSettingsRequestOneOf1NotificationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom Meeting API
 *
 * The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation.   All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * UpdateZoomRoomAccSettingsRequestOneOf1NotificationTest Class Doc Comment
 *
 * @category    Class
 * @description [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class UpdateZoomRoomAccSettingsRequestOneOf1NotificationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "UpdateZoomRoomAccSettingsRequestOneOf1Notification"
     */
    public function testUpdateZoomRoomAccSettingsRequestOneOf1Notification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "audio_meet_usability_threshold"
     */
    public function testPropertyAudioMeetUsabilityThreshold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "audio_not_meet_usability_threshold"
     */
    public function testPropertyAudioNotMeetUsabilityThreshold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "battery_is_charging"
     */
    public function testPropertyBatteryIsCharging()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "battery_low_and_not_charging"
     */
    public function testPropertyBatteryLowAndNotCharging()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "battery_percentage"
     */
    public function testPropertyBatteryPercentage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "controller_scheduling_disconnected"
     */
    public function testPropertyControllerSchedulingDisconnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "controller_scheduling_reconnected"
     */
    public function testPropertyControllerSchedulingReconnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_high_detected"
     */
    public function testPropertyCpuUsageHighDetected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mic_speaker_camera_disconnected"
     */
    public function testPropertyMicSpeakerCameraDisconnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mic_speaker_camera_reconnected"
     */
    public function testPropertyMicSpeakerCameraReconnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "network_stable_detected"
     */
    public function testPropertyNetworkStableDetected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "network_unstable_detected"
     */
    public function testPropertyNetworkUnstableDetected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sip_registration_failed"
     */
    public function testPropertySipRegistrationFailed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sip_registration_re_enabled"
     */
    public function testPropertySipRegistrationReEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoom_room_come_back_online"
     */
    public function testPropertyZoomRoomComeBackOnline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoom_room_display_disconnected"
     */
    public function testPropertyZoomRoomDisplayDisconnected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoom_room_offline"
     */
    public function testPropertyZoomRoomOffline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
