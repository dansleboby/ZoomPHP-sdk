<?php
/**
 * InlineResponse20031UsersTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Zoom\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom API
 *
 * The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applicatixons on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developersupport@zoom.us
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Zoom\Api;

use PHPUnit\Framework\TestCase;

/**
 * InlineResponse20031UsersTest Class Doc Comment
 *
 * @category    Class
 * @description InlineResponse20031Users
 * @package     Zoom\Api
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InlineResponse20031UsersTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "InlineResponse20031Users"
     */
    public function testInlineResponse20031Users()
    {
    }

    /**
     * Test attribute "user_id"
     */
    public function testPropertyUserId()
    {
    }

    /**
     * Test attribute "user_name"
     */
    public function testPropertyUserName()
    {
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
    }

    /**
     * Test attribute "total_send"
     */
    public function testPropertyTotalSend()
    {
    }

    /**
     * Test attribute "total_receive"
     */
    public function testPropertyTotalReceive()
    {
    }

    /**
     * Test attribute "group_send"
     */
    public function testPropertyGroupSend()
    {
    }

    /**
     * Test attribute "group_receive"
     */
    public function testPropertyGroupReceive()
    {
    }

    /**
     * Test attribute "calls_send"
     */
    public function testPropertyCallsSend()
    {
    }

    /**
     * Test attribute "calls_receive"
     */
    public function testPropertyCallsReceive()
    {
    }

    /**
     * Test attribute "files_send"
     */
    public function testPropertyFilesSend()
    {
    }

    /**
     * Test attribute "files_receive"
     */
    public function testPropertyFilesReceive()
    {
    }

    /**
     * Test attribute "images_send"
     */
    public function testPropertyImagesSend()
    {
    }

    /**
     * Test attribute "images_receive"
     */
    public function testPropertyImagesReceive()
    {
    }

    /**
     * Test attribute "voice_send"
     */
    public function testPropertyVoiceSend()
    {
    }

    /**
     * Test attribute "voice_receive"
     */
    public function testPropertyVoiceReceive()
    {
    }

    /**
     * Test attribute "videos_send"
     */
    public function testPropertyVideosSend()
    {
    }

    /**
     * Test attribute "videos_receive"
     */
    public function testPropertyVideosReceive()
    {
    }

    /**
     * Test attribute "emoji_send"
     */
    public function testPropertyEmojiSend()
    {
    }

    /**
     * Test attribute "emoji_receive"
     */
    public function testPropertyEmojiReceive()
    {
    }
}
