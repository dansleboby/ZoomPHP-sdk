<?php
/**
 * InlineResponse20119Test
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Zoom API
 *
 * The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applicatixons on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: developersupport@zoom.us
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * InlineResponse20119Test Class Doc Comment
 *
 * @category    Class
 * @description InlineResponse20119
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse20119Test extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "InlineResponse20119"
     */
    public function testInlineResponse20119()
    {
    }

    /**
     * Test attribute "agenda"
     */
    public function testPropertyAgenda()
    {
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "duration"
     */
    public function testPropertyDuration()
    {
    }

    /**
     * Test attribute "host_email"
     */
    public function testPropertyHostEmail()
    {
    }

    /**
     * Test attribute "host_id"
     */
    public function testPropertyHostId()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "join_url"
     */
    public function testPropertyJoinUrl()
    {
    }

    /**
     * Test attribute "occurrences"
     */
    public function testPropertyOccurrences()
    {
    }

    /**
     * Test attribute "password"
     */
    public function testPropertyPassword()
    {
    }

    /**
     * Test attribute "recurrence"
     */
    public function testPropertyRecurrence()
    {
    }

    /**
     * Test attribute "registrants_confirmation_email"
     */
    public function testPropertyRegistrantsConfirmationEmail()
    {
    }

    /**
     * Test attribute "settings"
     */
    public function testPropertySettings()
    {
    }

    /**
     * Test attribute "start_time"
     */
    public function testPropertyStartTime()
    {
    }

    /**
     * Test attribute "start_url"
     */
    public function testPropertyStartUrl()
    {
    }

    /**
     * Test attribute "template_id"
     */
    public function testPropertyTemplateId()
    {
    }

    /**
     * Test attribute "timezone"
     */
    public function testPropertyTimezone()
    {
    }

    /**
     * Test attribute "topic"
     */
    public function testPropertyTopic()
    {
    }

    /**
     * Test attribute "tracking_fields"
     */
    public function testPropertyTrackingFields()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "uuid"
     */
    public function testPropertyUuid()
    {
    }
}
