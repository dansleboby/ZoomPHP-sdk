<?php
/**
 * MeetingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom Meeting API
 *
 * The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation.   All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MeetingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MeetingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addBatchRegistrants
     *
     * Perform batch registration.
     *
     */
    public function testAddBatchRegistrants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createBatchPolls
     *
     * Perform batch poll creation.
     *
     */
    public function testCreateBatchPolls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteMeetingChatMessageById
     *
     * Delete a live meeting message.
     *
     */
    public function testDeleteMeetingChatMessageById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMeetingLiveStreamDetails
     *
     * Get livestream details.
     *
     */
    public function testGetMeetingLiveStreamDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for inMeetingControl
     *
     * Use in-meeting controls.
     *
     */
    public function testInMeetingControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listMeetingTemplates
     *
     * List meeting templates.
     *
     */
    public function testListMeetingTemplates()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listPastMeetingPolls
     *
     * List past meeting's poll results.
     *
     */
    public function testListPastMeetingPolls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meeting
     *
     * Get a meeting.
     *
     */
    public function testMeeting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingCreate
     *
     * Create a meeting.
     *
     */
    public function testMeetingCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingDelete
     *
     * Delete a meeting.
     *
     */
    public function testMeetingDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingInvitation
     *
     * Get meeting invitation.
     *
     */
    public function testMeetingInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingInviteLinksCreate
     *
     * Create meeting's invite links.
     *
     */
    public function testMeetingInviteLinksCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingLiveStreamStatusUpdate
     *
     * Update Live Stream Status.
     *
     */
    public function testMeetingLiveStreamStatusUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingLiveStreamUpdate
     *
     * Update a livestream.
     *
     */
    public function testMeetingLiveStreamUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingLocalRecordingJoinToken
     *
     * Get a meeting's join token for local recording.
     *
     */
    public function testMeetingLocalRecordingJoinToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingPollCreate
     *
     * Create a meeting poll.
     *
     */
    public function testMeetingPollCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingPollDelete
     *
     * Delete a meeting poll.
     *
     */
    public function testMeetingPollDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingPollGet
     *
     * Get a meeting poll.
     *
     */
    public function testMeetingPollGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingPollUpdate
     *
     * Update a meeting poll.
     *
     */
    public function testMeetingPollUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingPolls
     *
     * List meeting polls.
     *
     */
    public function testMeetingPolls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrantCreate
     *
     * Add a meeting registrant.
     *
     */
    public function testMeetingRegistrantCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrantGet
     *
     * Get a meeting registrant.
     *
     */
    public function testMeetingRegistrantGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrantQuestionUpdate
     *
     * Update registration questions.
     *
     */
    public function testMeetingRegistrantQuestionUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrantStatus
     *
     * Update registrant's status.
     *
     */
    public function testMeetingRegistrantStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrants
     *
     * List meeting registrants.
     *
     */
    public function testMeetingRegistrants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingRegistrantsQuestionsGet
     *
     * List registration questions.
     *
     */
    public function testMeetingRegistrantsQuestionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingStatus
     *
     * Update meeting status.
     *
     */
    public function testMeetingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingSurveyDelete
     *
     * Delete a meeting survey.
     *
     */
    public function testMeetingSurveyDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingSurveyGet
     *
     * Get a meeting survey.
     *
     */
    public function testMeetingSurveyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingSurveyUpdate
     *
     * Update a meeting survey.
     *
     */
    public function testMeetingSurveyUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingToken
     *
     * Get meeting's token.
     *
     */
    public function testMeetingToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingUpdate
     *
     * Update a meeting.
     *
     */
    public function testMeetingUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetingregistrantdelete
     *
     * Delete a meeting registrant.
     *
     */
    public function testMeetingregistrantdelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for meetings
     *
     * List meetings.
     *
     */
    public function testMeetings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pastMeetingDetails
     *
     * Get past meeting details.
     *
     */
    public function testPastMeetingDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pastMeetingParticipants
     *
     * Get past meeting participants.
     *
     */
    public function testPastMeetingParticipants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pastMeetings
     *
     * List past meeting instances.
     *
     */
    public function testPastMeetings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
