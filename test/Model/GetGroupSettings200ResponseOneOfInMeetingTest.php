<?php
/**
 * GetGroupSettings200ResponseOneOfInMeetingTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom Meeting API
 *
 * The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation.   All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetGroupSettings200ResponseOneOfInMeetingTest Class Doc Comment
 *
 * @category    Class
 * @description GetGroupSettings200ResponseOneOfInMeeting
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetGroupSettings200ResponseOneOfInMeetingTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetGroupSettings200ResponseOneOfInMeeting"
     */
    public function testGetGroupSettings200ResponseOneOfInMeeting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alert_guest_join"
     */
    public function testPropertyAlertGuestJoin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_live_streaming"
     */
    public function testPropertyAllowLiveStreaming()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_participants_chat_with"
     */
    public function testPropertyAllowParticipantsChatWith()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_show_zoom_windows"
     */
    public function testPropertyAllowShowZoomWindows()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_users_save_chats"
     */
    public function testPropertyAllowUsersSaveChats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "annotation"
     */
    public function testPropertyAnnotation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "attendee_on_hold"
     */
    public function testPropertyAttendeeOnHold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auto_answer"
     */
    public function testPropertyAutoAnswer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auto_saving_chat"
     */
    public function testPropertyAutoSavingChat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "breakout_room"
     */
    public function testPropertyBreakoutRoom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "breakout_room_schedule"
     */
    public function testPropertyBreakoutRoomSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chat"
     */
    public function testPropertyChat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "closed_caption"
     */
    public function testPropertyClosedCaption()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "closed_captioning"
     */
    public function testPropertyClosedCaptioning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "co_host"
     */
    public function testPropertyCoHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_data_center_regions"
     */
    public function testPropertyCustomDataCenterRegions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_live_streaming_service"
     */
    public function testPropertyCustomLiveStreamingService()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_service_instructions"
     */
    public function testPropertyCustomServiceInstructions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "data_center_regions"
     */
    public function testPropertyDataCenterRegions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_screen_sharing_for_host_meetings"
     */
    public function testPropertyDisableScreenSharingForHostMeetings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_screen_sharing_for_in_meeting_guests"
     */
    public function testPropertyDisableScreenSharingForInMeetingGuests()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "e2e_encryption"
     */
    public function testPropertyE2eEncryption()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "entry_exit_chime"
     */
    public function testPropertyEntryExitChime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "far_end_camera_control"
     */
    public function testPropertyFarEndCameraControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "feedback"
     */
    public function testPropertyFeedback()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "file_transfer"
     */
    public function testPropertyFileTransfer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "group_hd"
     */
    public function testPropertyGroupHd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "join_from_desktop"
     */
    public function testPropertyJoinFromDesktop()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "join_from_mobile"
     */
    public function testPropertyJoinFromMobile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "language_interpretation"
     */
    public function testPropertyLanguageInterpretation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "live_streaming_facebook"
     */
    public function testPropertyLiveStreamingFacebook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "live_streaming_youtube"
     */
    public function testPropertyLiveStreamingYoutube()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_captioning"
     */
    public function testPropertyManualCaptioning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "meeting_reactions"
     */
    public function testPropertyMeetingReactions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "meeting_survey"
     */
    public function testPropertyMeetingSurvey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_verbal_feedback"
     */
    public function testPropertyNonVerbalFeedback()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "only_host_view_device_list"
     */
    public function testPropertyOnlyHostViewDeviceList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "original_audio"
     */
    public function testPropertyOriginalAudio()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "polling"
     */
    public function testPropertyPolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "post_meeting_feedback"
     */
    public function testPropertyPostMeetingFeedback()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "private_chat"
     */
    public function testPropertyPrivateChat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "record_play_own_voice"
     */
    public function testPropertyRecordPlayOwnVoice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_control"
     */
    public function testPropertyRemoteControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_support"
     */
    public function testPropertyRemoteSupport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_permission_to_unmute"
     */
    public function testPropertyRequestPermissionToUnmute()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "screen_sharing"
     */
    public function testPropertyScreenSharing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sending_default_email_invites"
     */
    public function testPropertySendingDefaultEmailInvites()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_a_join_from_your_browser_link"
     */
    public function testPropertyShowAJoinFromYourBrowserLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_browser_join_link"
     */
    public function testPropertyShowBrowserJoinLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_device_list"
     */
    public function testPropertyShowDeviceList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_meeting_control_toolbar"
     */
    public function testPropertyShowMeetingControlToolbar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "slide_control"
     */
    public function testPropertySlideControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stereo_audio"
     */
    public function testPropertyStereoAudio()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unchecked_data_center_regions"
     */
    public function testPropertyUncheckedDataCenterRegions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_html_format_email"
     */
    public function testPropertyUseHtmlFormatEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "virtual_background"
     */
    public function testPropertyVirtualBackground()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "virtual_background_settings"
     */
    public function testPropertyVirtualBackgroundSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "waiting_room"
     */
    public function testPropertyWaitingRoom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webinar_chat"
     */
    public function testPropertyWebinarChat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webinar_live_streaming"
     */
    public function testPropertyWebinarLiveStreaming()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "meeting_polling"
     */
    public function testPropertyMeetingPolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webinar_polling"
     */
    public function testPropertyWebinarPolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webinar_question_answer"
     */
    public function testPropertyWebinarQuestionAnswer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webinar_survey"
     */
    public function testPropertyWebinarSurvey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "whiteboard"
     */
    public function testPropertyWhiteboard()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "who_can_share_screen"
     */
    public function testPropertyWhoCanShareScreen()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "who_can_share_screen_when_someone_is_sharing"
     */
    public function testPropertyWhoCanShareScreenWhenSomeoneIsSharing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "participants_share_simultaneously"
     */
    public function testPropertyParticipantsShareSimultaneously()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "workplace_by_facebook"
     */
    public function testPropertyWorkplaceByFacebook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
