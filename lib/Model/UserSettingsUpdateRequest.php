<?php
/**
 * UserSettingsUpdateRequest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Zoom\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom Meeting API
 *
 * The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation.   All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zoom\Api\Model;

use \ArrayAccess;
use \Zoom\Api\ObjectSerializer;

/**
 * UserSettingsUpdateRequest Class Doc Comment
 *
 * @category Class
 * @package  Zoom\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class UserSettingsUpdateRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'userSettingsUpdate_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'email_notification' => '\Zoom\Api\Model\UserSettingsEmailNotification',
        'feature' => '\Zoom\Api\Model\UserSettingsFeatureUpdate',
        'in_meeting' => '\Zoom\Api\Model\UserInMeetingSettings',
        'profile' => '\Zoom\Api\Model\Profile',
        'recording' => '\Zoom\Api\Model\UserSettingsRecording',
        'schedule_meeting' => '\Zoom\Api\Model\UserSettingsMeetingSettings',
        'telephony' => '\Zoom\Api\Model\SettingsUpdateTelephony',
        'tsp' => '\Zoom\Api\Model\UserSettingsTSP',
        'authentication_option' => '\Zoom\Api\Model\GroupUserSettingsAuthenticationUpdateOneOf1AuthenticationOption',
        'meeting_authentication' => 'bool',
        'recording_authentication' => 'bool',
        'meeting_security' => '\Zoom\Api\Model\MeetingWebinarSecuritySettings1MeetingSecurity'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'email_notification' => null,
        'feature' => null,
        'in_meeting' => null,
        'profile' => null,
        'recording' => null,
        'schedule_meeting' => null,
        'telephony' => null,
        'tsp' => null,
        'authentication_option' => null,
        'meeting_authentication' => null,
        'recording_authentication' => null,
        'meeting_security' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'email_notification' => 'email_notification',
        'feature' => 'feature',
        'in_meeting' => 'in_meeting',
        'profile' => 'profile',
        'recording' => 'recording',
        'schedule_meeting' => 'schedule_meeting',
        'telephony' => 'telephony',
        'tsp' => 'tsp',
        'authentication_option' => 'authentication_option',
        'meeting_authentication' => 'meeting_authentication',
        'recording_authentication' => 'recording_authentication',
        'meeting_security' => 'meeting_security'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'email_notification' => 'setEmailNotification',
        'feature' => 'setFeature',
        'in_meeting' => 'setInMeeting',
        'profile' => 'setProfile',
        'recording' => 'setRecording',
        'schedule_meeting' => 'setScheduleMeeting',
        'telephony' => 'setTelephony',
        'tsp' => 'setTsp',
        'authentication_option' => 'setAuthenticationOption',
        'meeting_authentication' => 'setMeetingAuthentication',
        'recording_authentication' => 'setRecordingAuthentication',
        'meeting_security' => 'setMeetingSecurity'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'email_notification' => 'getEmailNotification',
        'feature' => 'getFeature',
        'in_meeting' => 'getInMeeting',
        'profile' => 'getProfile',
        'recording' => 'getRecording',
        'schedule_meeting' => 'getScheduleMeeting',
        'telephony' => 'getTelephony',
        'tsp' => 'getTsp',
        'authentication_option' => 'getAuthenticationOption',
        'meeting_authentication' => 'getMeetingAuthentication',
        'recording_authentication' => 'getRecordingAuthentication',
        'meeting_security' => 'getMeetingSecurity'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['email_notification'] = $data['email_notification'] ?? null;
        $this->container['feature'] = $data['feature'] ?? null;
        $this->container['in_meeting'] = $data['in_meeting'] ?? null;
        $this->container['profile'] = $data['profile'] ?? null;
        $this->container['recording'] = $data['recording'] ?? null;
        $this->container['schedule_meeting'] = $data['schedule_meeting'] ?? null;
        $this->container['telephony'] = $data['telephony'] ?? null;
        $this->container['tsp'] = $data['tsp'] ?? null;
        $this->container['authentication_option'] = $data['authentication_option'] ?? null;
        $this->container['meeting_authentication'] = $data['meeting_authentication'] ?? null;
        $this->container['recording_authentication'] = $data['recording_authentication'] ?? null;
        $this->container['meeting_security'] = $data['meeting_security'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets email_notification
     *
     * @return \Zoom\Api\Model\UserSettingsEmailNotification|null
     */
    public function getEmailNotification()
    {
        return $this->container['email_notification'];
    }

    /**
     * Sets email_notification
     *
     * @param \Zoom\Api\Model\UserSettingsEmailNotification|null $email_notification email_notification
     *
     * @return self
     */
    public function setEmailNotification($email_notification)
    {
        $this->container['email_notification'] = $email_notification;

        return $this;
    }

    /**
     * Gets feature
     *
     * @return \Zoom\Api\Model\UserSettingsFeatureUpdate|null
     */
    public function getFeature()
    {
        return $this->container['feature'];
    }

    /**
     * Sets feature
     *
     * @param \Zoom\Api\Model\UserSettingsFeatureUpdate|null $feature feature
     *
     * @return self
     */
    public function setFeature($feature)
    {
        $this->container['feature'] = $feature;

        return $this;
    }

    /**
     * Gets in_meeting
     *
     * @return \Zoom\Api\Model\UserInMeetingSettings|null
     */
    public function getInMeeting()
    {
        return $this->container['in_meeting'];
    }

    /**
     * Sets in_meeting
     *
     * @param \Zoom\Api\Model\UserInMeetingSettings|null $in_meeting in_meeting
     *
     * @return self
     */
    public function setInMeeting($in_meeting)
    {
        $this->container['in_meeting'] = $in_meeting;

        return $this;
    }

    /**
     * Gets profile
     *
     * @return \Zoom\Api\Model\Profile|null
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     *
     * @param \Zoom\Api\Model\Profile|null $profile profile
     *
     * @return self
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets recording
     *
     * @return \Zoom\Api\Model\UserSettingsRecording|null
     */
    public function getRecording()
    {
        return $this->container['recording'];
    }

    /**
     * Sets recording
     *
     * @param \Zoom\Api\Model\UserSettingsRecording|null $recording recording
     *
     * @return self
     */
    public function setRecording($recording)
    {
        $this->container['recording'] = $recording;

        return $this;
    }

    /**
     * Gets schedule_meeting
     *
     * @return \Zoom\Api\Model\UserSettingsMeetingSettings|null
     */
    public function getScheduleMeeting()
    {
        return $this->container['schedule_meeting'];
    }

    /**
     * Sets schedule_meeting
     *
     * @param \Zoom\Api\Model\UserSettingsMeetingSettings|null $schedule_meeting schedule_meeting
     *
     * @return self
     */
    public function setScheduleMeeting($schedule_meeting)
    {
        $this->container['schedule_meeting'] = $schedule_meeting;

        return $this;
    }

    /**
     * Gets telephony
     *
     * @return \Zoom\Api\Model\SettingsUpdateTelephony|null
     */
    public function getTelephony()
    {
        return $this->container['telephony'];
    }

    /**
     * Sets telephony
     *
     * @param \Zoom\Api\Model\SettingsUpdateTelephony|null $telephony telephony
     *
     * @return self
     */
    public function setTelephony($telephony)
    {
        $this->container['telephony'] = $telephony;

        return $this;
    }

    /**
     * Gets tsp
     *
     * @return \Zoom\Api\Model\UserSettingsTSP|null
     */
    public function getTsp()
    {
        return $this->container['tsp'];
    }

    /**
     * Sets tsp
     *
     * @param \Zoom\Api\Model\UserSettingsTSP|null $tsp tsp
     *
     * @return self
     */
    public function setTsp($tsp)
    {
        $this->container['tsp'] = $tsp;

        return $this;
    }

    /**
     * Gets authentication_option
     *
     * @return \Zoom\Api\Model\GroupUserSettingsAuthenticationUpdateOneOf1AuthenticationOption|null
     */
    public function getAuthenticationOption()
    {
        return $this->container['authentication_option'];
    }

    /**
     * Sets authentication_option
     *
     * @param \Zoom\Api\Model\GroupUserSettingsAuthenticationUpdateOneOf1AuthenticationOption|null $authentication_option authentication_option
     *
     * @return self
     */
    public function setAuthenticationOption($authentication_option)
    {
        $this->container['authentication_option'] = $authentication_option;

        return $this;
    }

    /**
     * Gets meeting_authentication
     *
     * @return bool|null
     */
    public function getMeetingAuthentication()
    {
        return $this->container['meeting_authentication'];
    }

    /**
     * Sets meeting_authentication
     *
     * @param bool|null $meeting_authentication Only authenticated users can join meetings
     *
     * @return self
     */
    public function setMeetingAuthentication($meeting_authentication)
    {
        $this->container['meeting_authentication'] = $meeting_authentication;

        return $this;
    }

    /**
     * Gets recording_authentication
     *
     * @return bool|null
     */
    public function getRecordingAuthentication()
    {
        return $this->container['recording_authentication'];
    }

    /**
     * Sets recording_authentication
     *
     * @param bool|null $recording_authentication Only authenticated users can view cloud recordings
     *
     * @return self
     */
    public function setRecordingAuthentication($recording_authentication)
    {
        $this->container['recording_authentication'] = $recording_authentication;

        return $this;
    }

    /**
     * Gets meeting_security
     *
     * @return \Zoom\Api\Model\MeetingWebinarSecuritySettings1MeetingSecurity|null
     */
    public function getMeetingSecurity()
    {
        return $this->container['meeting_security'];
    }

    /**
     * Sets meeting_security
     *
     * @param \Zoom\Api\Model\MeetingWebinarSecuritySettings1MeetingSecurity|null $meeting_security meeting_security
     *
     * @return self
     */
    public function setMeetingSecurity($meeting_security)
    {
        $this->container['meeting_security'] = $meeting_security;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


