<?php
/**
 * SIPConnectedAudioApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ZoomApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Zoom API
 *
 * The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applicatixons on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: developersupport@zoom.us
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ZoomApi;

use \ZoomApi\Configuration;
use \ZoomApi\ApiException;
use \ZoomApi\ObjectSerializer;

/**
 * SIPConnectedAudioApiTest Class Doc Comment
 *
 * @category Class
 * @package  ZoomApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SIPConnectedAudioApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addCalloutCountries
     *
     * Add Internal Call-out Countries.
     *
     */
    public function testAddCalloutCountries()
    {
    }

    /**
     * Test case for addInternalNumbers
     *
     * Add Internal Numbers.
     *
     */
    public function testAddInternalNumbers()
    {
    }

    /**
     * Test case for assignSIPConfig
     *
     * Assign SIP Trunk Configuration.
     *
     */
    public function testAssignSIPConfig()
    {
    }

    /**
     * Test case for assignSIPTrunks
     *
     * Assign SIP Trunks.
     *
     */
    public function testAssignSIPTrunks()
    {
    }

    /**
     * Test case for assignSipTrunkNumbers
     *
     * Assign Numbers.
     *
     */
    public function testAssignSipTrunkNumbers()
    {
    }

    /**
     * Test case for deleteAllSipNumbers
     *
     * Delete All Numbers.
     *
     */
    public function testDeleteAllSipNumbers()
    {
    }

    /**
     * Test case for deleteInternalCallOutCountry
     *
     * Delete Internal Call-out Country.
     *
     */
    public function testDeleteInternalCallOutCountry()
    {
    }

    /**
     * Test case for deleteInternalNumber
     *
     * Delete an Internal Number.
     *
     */
    public function testDeleteInternalNumber()
    {
    }

    /**
     * Test case for deleteSIPTrunk
     *
     * Delete a SIP Trunk.
     *
     */
    public function testDeleteSIPTrunk()
    {
    }

    /**
     * Test case for listInternalCalloutCountries
     *
     * List Internal Call-out Countries.
     *
     */
    public function testListInternalCalloutCountries()
    {
    }

    /**
     * Test case for listInternalNumbers
     *
     * List Internal Numbers.
     *
     */
    public function testListInternalNumbers()
    {
    }

    /**
     * Test case for listSIPTrunks
     *
     * List SIP Trunks.
     *
     */
    public function testListSIPTrunks()
    {
    }

    /**
     * Test case for listSipTrunkNumbers
     *
     * List SIP Trunk Numbers.
     *
     */
    public function testListSipTrunkNumbers()
    {
    }
}
