<?php
/**
 * ZoomRoomsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zoom Meeting API
 *
 * The Zoom Meeting APIs let developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [JWT](/guides/auth/jwt) and [OAuth](/guides/auth/oauth) documentation.   All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For example, to list all of an account's users, use the `https://api.zoom.us/v2/users/` endpoint.
 *
 * The version of the OpenAPI document: 2.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ZoomRoomsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ZoomRoomsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addARoom
     *
     * Add a Zoom Room.
     *
     */
    public function testAddARoom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for changeZRLocation
     *
     * Change a Zoom Room's location.
     *
     */
    public function testChangeZRLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createRoomDeviceProfile
     *
     * Create a device profile.
     *
     */
    public function testCreateRoomDeviceProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAZoomRoom
     *
     * Delete a Zoom Room.
     *
     */
    public function testDeleteAZoomRoom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRoomProfile
     *
     * Delete a device profile.
     *
     */
    public function testDeleteRoomProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRoomDevices
     *
     * Get device information.
     *
     */
    public function testGetRoomDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRoomProfile
     *
     * Get a device profile.
     *
     */
    public function testGetRoomProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRoomProfiles
     *
     * List device profiles.
     *
     */
    public function testGetRoomProfiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZRProfile
     *
     * Get Zoom Room profile.
     *
     */
    public function testGetZRProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getZRSettings
     *
     * Get Zoom Room settings.
     *
     */
    public function testGetZRSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDigitalSignageContent
     *
     * List digital signage contents.
     *
     */
    public function testListDigitalSignageContent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listZRDevices
     *
     * List Zoom Room devices.
     *
     */
    public function testListZRDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listZoomRooms
     *
     * List Zoom Rooms.
     *
     */
    public function testListZoomRooms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for manageE911signage
     *
     * Update E911 digital signage.
     *
     */
    public function testManageE911signage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceProfile
     *
     * Update a device profile.
     *
     */
    public function testUpdateDeviceProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRoomProfile
     *
     * Update a Zoom Room profile.
     *
     */
    public function testUpdateRoomProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateZRSettings
     *
     * Update Zoom Room settings.
     *
     */
    public function testUpdateZRSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for zoomRoomsControls
     *
     * Use Zoom Room controls.
     *
     */
    public function testZoomRoomsControls()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
