<?php
/**
 * CloudRecordingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Zoom API
 *
 * The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applicatixons on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: developersupport@zoom.us
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * CloudRecordingApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CloudRecordingApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for getAccountCloudRecording
     *
     * List Recordings of an Account.
     *
     */
    public function testGetAccountCloudRecording()
    {
    }

    /**
     * Test case for meetingRecordingRegistrantCreate
     *
     * Create a Recording Registrant.
     *
     */
    public function testMeetingRecordingRegistrantCreate()
    {
    }

    /**
     * Test case for meetingRecordingRegistrantStatus
     *
     * Update Recording Registrant's Status.
     *
     */
    public function testMeetingRecordingRegistrantStatus()
    {
    }

    /**
     * Test case for meetingRecordingRegistrants
     *
     * List Recording Registrants.
     *
     */
    public function testMeetingRecordingRegistrants()
    {
    }

    /**
     * Test case for recordingDelete
     *
     * Delete Meeting Recordings.
     *
     */
    public function testRecordingDelete()
    {
    }

    /**
     * Test case for recordingDeleteOne
     *
     * Delete a Meeting Recording File.
     *
     */
    public function testRecordingDeleteOne()
    {
    }

    /**
     * Test case for recordingGet
     *
     * Get Meeting Recordings.
     *
     */
    public function testRecordingGet()
    {
    }

    /**
     * Test case for recordingRegistrantQuestionUpdate
     *
     * Update Registration Questions.
     *
     */
    public function testRecordingRegistrantQuestionUpdate()
    {
    }

    /**
     * Test case for recordingRegistrantsQuestionsGet
     *
     * Get Registration Questions.
     *
     */
    public function testRecordingRegistrantsQuestionsGet()
    {
    }

    /**
     * Test case for recordingSettingUpdate
     *
     * Get Meeting Recording Settings.
     *
     */
    public function testRecordingSettingUpdate()
    {
    }

    /**
     * Test case for recordingSettingsUpdate
     *
     * Update Meeting Recording Settings.
     *
     */
    public function testRecordingSettingsUpdate()
    {
    }

    /**
     * Test case for recordingStatusUpdate
     *
     * Recover Meeting Recordings.
     *
     */
    public function testRecordingStatusUpdate()
    {
    }

    /**
     * Test case for recordingStatusUpdateOne
     *
     * Recover a Single Recording.
     *
     */
    public function testRecordingStatusUpdateOne()
    {
    }

    /**
     * Test case for recordingsList
     *
     * List All Recordings.
     *
     */
    public function testRecordingsList()
    {
    }
}
